searchState.loadedDescShard("pinocchio_token", 0, "The const program ID.\nReturns <code>true</code> if given pubkey is the program ID.\nReturns the program ID.\nApproves a delegate.\nApproves a delegate.\nBurns tokens by removing them from an account.\nBurns tokens by removing them from an account.\nClose an account by transferring all its SOL to the …\nFreeze an Initialized account using the Mint’s …\nInitialize a new Token Account.\nInitialize a new Token Account.\nInitialize a new Token Account.\nInitialize a new mint.\nInitialize a new mint.\nMints new tokens to an account.\nMints new tokens to an account.\nRevokes the delegate’s authority.\nSets a new authority of a mint or account.\nGiven a native token account updates its amount field based\nThaw a Frozen account using the Mint’s freeze_authority\nTransfer Tokens from one Token Account to another.\nTransfer Tokens from one Token Account to another.\nSource of the Burn Account\nSource of the Burn Account\nToken Account.\nToken Account to freeze.\nNew Account.\nNew Account.\nNew Account.\nToken Account.\nToken Account.\nAccount (Mint or Token)\nToken Account to thaw.\nAmount\nAmount.\nAmount\nAmount\nAmount\nAmount\nAmount of microtokens to transfer.\nAmount of microtokens to transfer.\nSource Owner Account\nSource Owner Account.\nOwner of the Token Account\nOwner of the Token Account\nOwner Account\nSource Owner Account.\nAuthority of the Account.\nAuthority account.\nAuthority account.\nThe type of authority to update.\nDecimals.\nDecimals\nDecimals.\nDecimals.\nDecimals\nDecimal for the Token\nDelegate Account\nDelegate Account.\nDestination Account\nMint Freeze Authority Account\nFreeze Authority.\nFreeze Authority.\nMint Freeze Authority Account\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nSender account.\nSender account.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMint Account.\nMint Account\nMint Account\nMint Account.\nMint Account.\nMint Account.\nMint Account.\nMint Account.\nMint Account.\nMint Account.\nMint Account.\nMint Account.\nMint Account\nMint Authority.\nMint Authority.\nMint Authority\nMint Authority\nNative Token Account\nThe new authority\nOwner of the new Account.\nOwner of the new Account.\nOwner of the new Account.\nRent Sysvar Account\nRent Sysvar Account\nRent sysvar Account.\nSource Account.\nSource Account.\nSource Account.\nRecipient account.\nRecipient account.\nApproves a delegate.\nAmount\nSource Owner Account\nDelegate Account\nSource Account.\nApproves a delegate.\nAmount.\nSource Owner Account.\nDecimals.\nDelegate Account.\nMint Account.\nSource Account.\nBurns tokens by removing them from an account.\nSource of the Burn Account\nAmount\nOwner of the Token Account\nMint Account\nBurns tokens by removing them from an account.\nSource of the Burn Account\nAmount\nOwner of the Token Account\nDecimals\nMint Account\nClose an account by transferring all its SOL to the …\nToken Account.\nOwner Account\nDestination Account\nFreeze an Initialized account using the Mint’s …\nToken Account to freeze.\nMint Freeze Authority Account\nMint Account.\nInitialize a new Token Account.\nNew Account.\nMint Account.\nOwner of the new Account.\nRent Sysvar Account\nInitialize a new Token Account.\nNew Account.\nMint Account.\nOwner of the new Account.\nRent Sysvar Account\nInitialize a new Token Account.\nNew Account.\nMint Account.\nOwner of the new Account.\nInitialize a new mint.\nDecimals.\nFreeze Authority.\nMint Account.\nMint Authority.\nRent sysvar Account.\nInitialize a new mint.\nDecimals.\nFreeze Authority.\nMint Account.\nMint Authority.\nMints new tokens to an account.\nToken Account.\nAmount\nMint Account.\nMint Authority\nMints new tokens to an account.\nToken Account.\nAmount\nDecimals\nMint Account.\nMint Authority\nRevokes the delegate’s authority.\nSource Owner Account.\nSource Account.\nSets a new authority of a mint or account.\nAccount (Mint or Token)\nAuthority of the Account.\nThe type of authority to update.\nThe new authority\nGiven a native token account updates its amount field based\nNative Token Account\nThaw a Frozen account using the Mint’s freeze_authority\nToken Account to thaw.\nMint Freeze Authority Account\nMint Account.\nTransfer Tokens from one Token Account to another.\nAmount of microtokens to transfer.\nAuthority account.\nSender account.\nRecipient account.\nTransfer Tokens from one Token Account to another.\nAmount of microtokens to transfer.\nAuthority account.\nDecimal for the Token\nSender account.\nMint Account\nRecipient account.\nAccount has been frozen by the mint freeze authority. …\nAccount is initialized; the account owner and/or delegate …\nMint data.\nToken account data.\nAccount is not yet initialized\nThe amount of tokens this account holds.\nOptional authority to close the account.\nIndicates whether the close authority is present or not.\nNumber of base 10 digits to the right of the decimal place.\nIf <code>delegate</code> is <code>Some</code> then <code>delegated_amount</code> represents the …\nIndicates whether the delegate is present or not.\nThe amount delegated.\nOptional authority to freeze token accounts.\nIndicates whether the freeze authority is present or not.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIs <code>true</code> if this structure has been initialized.\nIndicates whether this account represents a native token …\nThe mint associated with this account\nOptional authority used to mint new tokens. The mint …\nIndicates whether the mint authority is present or not.\nIf is_native.is_some, this is a native token, and the …\nThe owner of this account.\nThe account’s state.\nTotal supply of tokens.\nAccount has been frozen by the mint freeze authority. …\nAccount is initialized; the account owner and/or delegate …\nAccount is not yet initialized\nThe length of the <code>Mint</code> account data.\nMint data.\nNumber of base 10 digits to the right of the decimal place.\nOptional authority to freeze token accounts.\nIndicates whether the freeze authority is present or not.\nReturn the freeze authority.\nReturn a <code>Mint</code> from the given account info.\nReturn a <code>Mint</code> from the given account info.\nReturn a <code>Mint</code> from the given bytes.\nIs <code>true</code> if this structure has been initialized.\nOptional authority used to mint new tokens. The mint …\nIndicates whether the mint authority is present or not.\nReturn the mint authority.\nTotal supply of tokens.\nToken account data.\nThe amount of tokens this account holds.\nOptional authority to close the account.\nIndicates whether the close authority is present or not.\nReturn the close authority.\nIf <code>delegate</code> is <code>Some</code> then <code>delegated_amount</code> represents the …\nIndicates whether the delegate is present or not.\nUse this when you know the account will have a delegate …\nThe amount delegated.\nReturn a <code>TokenAccount</code> from the given account info.\nReturn a <code>TokenAccount</code> from the given account info.\nReturn a <code>TokenAccount</code> from the given bytes.\nIndicates whether this account represents a native token …\nThe mint associated with this account\nIf is_native.is_some, this is a native token, and the …\nReturn the native amount.\nThe owner of this account.\nThe account’s state.")